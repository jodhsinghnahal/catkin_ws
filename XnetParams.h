
#include <unordered_map>
#include <vector>
#include <tuple>
#include <string>

using ParamCmdMap = std::unordered_map<std::string, std::tuple<std::string, std::string, std::vector<std::tuple<std::string, std::string>>, std::string>>;
using Fault = std::vector<std::tuple<int, int, int, int, int, std::string>>;
using Warning = std::vector<std::tuple<int, int, int, int, int, std::string>>;
using Model = std::tuple<std::string, ParamCmdMap, ParamCmdMap, Fault, Warning>;
using Model_Map = std::unordered_map<std::string, Model>;

// xFEX_RVC_4048_120_60 Parameter Map
ParamCmdMap xFEX_RVC_4048_120_60_PARAM_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgSts1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgSts1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgSts1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgSts2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgSts2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line2RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcIn1Line2RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1PhaseStatus", std::make_tuple("ChgAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RealPower", std::make_tuple("ChgAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1ReactivePower", std::make_tuple("ChgAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line2PhaseStatus", std::make_tuple("ChgAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcIn1Line2RealPower", std::make_tuple("ChgAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcIn1Line2ReactivePower", std::make_tuple("ChgAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcIn1QualStatus", std::make_tuple("ChgAcSts4", "QualifStat", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgSts1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgSts1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgSts2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgSts3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgSts3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgSts4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgSts", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line2RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcOut1Line2RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line2PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcOut1Line2RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcOut1Line2ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 2")}, "")},
    {"AcOut1QualStatus", std::make_tuple("InvAcSts4", "QualifStat", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgSts1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgSts1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgSts2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgSts3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"XfmrTemp", std::make_tuple("InvTempSts", "XfmrTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdSts", "CurrentMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "InverterEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInQuality", std::make_tuple("PmAcStsRms", "Quality", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"XferSwState", std::make_tuple("PmAcXferSwSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"XferSwMode", std::make_tuple("PmAcXferSwSts", "XferSwMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocStsACInput0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcInputOut0", std::make_tuple("PmAssocStsACInputOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocStsACOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocStsDCInputOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ChgMode", std::make_tuple("PmChgSts", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ClearFaultsWarnings", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterMode", std::make_tuple("PmInvSts", "InvMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFEX_RVC_4048_120_60 Command Map
ParamCmdMap xFEX_RVC_4048_120_60_CMD_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgCmd1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgCmd1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgCmd1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgCmd2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgCmd2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgCmd1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgCmd1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgCmd2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgCmd3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgCmd3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgCmd4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgCmd", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgCmd1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgCmd1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgCmd2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgCmd3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdCfg", "DesiredMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcInputOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("GenRst", "ClrFlts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("GenRst", "RstDflt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFEX_RVC_4048_120_60 Fault Lookup
Fault xFEX_RVC_4048_120_60_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 1, 11, 46, "Controller Fault"),
    std::make_tuple(0, 0, 1, 11, 51, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 53, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 66, "System Configuration Fault"),
    std::make_tuple(0, 0, 3, 13, 52, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 55, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 56, "EEPROM Error"),
    std::make_tuple(0, 1, 1, 11, 9, "BMS Node Missing for CVCC mode"),
    std::make_tuple(0, 1, 3, 11, 67, "Watchdog Error"),
    std::make_tuple(0, 1, 4, 11, 54, "EEPROM Error"),
    std::make_tuple(0, 1, 4, 11, 60, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 61, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 62, "Unit Fault"),
    std::make_tuple(1, -1, 0, 0, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 47, "DC Under Immediate Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 1, 0, 71, "Battery Discharge Over Current"),
    std::make_tuple(1, -1, 2, 0, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(1, 1, 7, 7, 17, "Relay[s] Welded"),
    std::make_tuple(1, 1, 7, 11, 22, "Relay[s] Welded"),
    std::make_tuple(1, 2, 7, 7, 19, "Relay[s] Welded"),
    std::make_tuple(1, 17, 7, 7, 18, "Relay[s] Welded"),
    std::make_tuple(1, 18, 7, 7, 20, "Relay[s] Welded"),
    std::make_tuple(1, 49, 7, 11, 21, "Relay[s] Welded"),
    std::make_tuple(2, -1, 0, 0, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 0, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(3, -1, 0, 0, 45, "Capacitor Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 0, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 6, 7, 72, "External AC Contactor Malfunction"),
    std::make_tuple(4, -1, 1, 8, 69, "External Sync Failed"),
    std::make_tuple(129, 65, 0, 0, 2, "AC Output Over Voltage"),
    std::make_tuple(129, 65, 0, 1, 1, "AC Output Under Voltage"),
    std::make_tuple(129, 65, 1, 0, 63, "AC Overload"),
    std::make_tuple(129, 66, 1, 0, 64, "AC Overload Line 1"),
    std::make_tuple(129, 66, 1, 0, 65, "AC Overload Line 2"),
    std::make_tuple(132, -1, 0, 0, 42, "Auxiliary Power Supply Over Voltage Shutdown"),
    std::make_tuple(132, -1, 0, 0, 76, "DC-DC Converter Over Voltage"),
    std::make_tuple(132, -1, 0, 1, 41, "Auxiliary Power Supply Under Voltage Shutdown"),
    std::make_tuple(132, -1, 0, 1, 75, "DC-DC Converter Under Voltage"),
    std::make_tuple(132, -1, 1, 0, 77, "DC-DC Converter Over Current"),
    std::make_tuple(132, -1, 2, 0, 73, "DC-DC Converter FETA Over Temperature"),
    std::make_tuple(132, -1, 2, 0, 74, "DC-DC Converter FETB Over Temperature"),
};

// xFEX_RVC_4048_120_60 Warning Lookup
Warning xFEX_RVC_4048_120_60_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 4, 11, 51, "EEPROM Error"),
    std::make_tuple(0, 0, 5, 14, 94, "Remote Power Off"),
    std::make_tuple(1, -1, 0, 15, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 17, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 3, 97, "Battery Sensor Short"),
    std::make_tuple(1, -1, 2, 15, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(2, -1, 0, 15, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 15, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(3, -1, 0, 15, 45, "Capacitor Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 15, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 4, 11, 95, "Equalization Abort"),
    std::make_tuple(3, -1, 4, 11, 96, "Cannot Equalize"),
    std::make_tuple(129, -1, 1, 16, 63, "AC Overload"),
    std::make_tuple(129, -1, 1, 16, 64, "AC Overload Line 1"),
    std::make_tuple(129, -1, 1, 16, 65, "AC Overload Line 2"),
    std::make_tuple(132, -1, 0, 16, 76, "DC-DC Converter Over Voltage"),
    std::make_tuple(132, -1, 0, 18, 75, "DC-DC Converter Under Voltage"),
    std::make_tuple(132, -1, 1, 16, 77, "DC-DC Converter Over Current"),
    std::make_tuple(132, -1, 2, 16, 73, "DC-DC Converter FETA Over Temperature"),
    std::make_tuple(132, -1, 2, 16, 74, "DC-DC Converter FETB Over Temperature"),
};

// xFEX_RVC_4048_120_60 Model Map
Model xFEX_RVC_4048_120_60_MODEL_MAP = std::make_tuple(
    "invchg",
    xFEX_RVC_4048_120_60_PARAM_MAP,
    xFEX_RVC_4048_120_60_CMD_MAP,
    xFEX_RVC_4048_120_60_FAULT_LOOKUP,
    xFEX_RVC_4048_120_60_WARNING_LOOKUP
);

// xFX_8182010 Parameter Map
ParamCmdMap xFX_8182010_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1PhaseStatus", std::make_tuple("ChgAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgSts1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8182010 Command Map
ParamCmdMap xFX_8182010_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgCmd1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8182010 Fault Lookup
Fault xFX_8182010_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8182010 Warning Lookup
Warning xFX_8182010_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8182010 Model Map
Model xFX_8182010_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8182010_PARAM_MAP,
    xFX_8182010_CMD_MAP,
    xFX_8182010_FAULT_LOOKUP,
    xFX_8182010_WARNING_LOOKUP
);

// xFX_8183011 Parameter Map
ParamCmdMap xFX_8183011_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1PhaseStatus", std::make_tuple("ChgAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgSts1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8183011 Command Map
ParamCmdMap xFX_8183011_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgCmd1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8183011 Fault Lookup
Fault xFX_8183011_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8183011 Warning Lookup
Warning xFX_8183011_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8183011 Model Map
Model xFX_8183011_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8183011_PARAM_MAP,
    xFX_8183011_CMD_MAP,
    xFX_8183011_FAULT_LOOKUP,
    xFX_8183011_WARNING_LOOKUP
);

// xFX_8171050 Parameter Map
ParamCmdMap xFX_8171050_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1PhaseStatus", std::make_tuple("ChgAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgSts1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8171050 Command Map
ParamCmdMap xFX_8171050_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgCmd1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8171050 Fault Lookup
Fault xFX_8171050_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8171050 Warning Lookup
Warning xFX_8171050_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8171050 Model Map
Model xFX_8171050_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8171050_PARAM_MAP,
    xFX_8171050_CMD_MAP,
    xFX_8171050_FAULT_LOOKUP,
    xFX_8171050_WARNING_LOOKUP
);

// xFX_8172080 Parameter Map
ParamCmdMap xFX_8172080_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1PhaseStatus", std::make_tuple("ChgAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgSts1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8172080 Command Map
ParamCmdMap xFX_8172080_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgCmd1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8172080 Fault Lookup
Fault xFX_8172080_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8172080 Warning Lookup
Warning xFX_8172080_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8172080 Model Map
Model xFX_8172080_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8172080_PARAM_MAP,
    xFX_8172080_CMD_MAP,
    xFX_8172080_FAULT_LOOKUP,
    xFX_8172080_WARNING_LOOKUP
);

// xFX_817208012 Parameter Map
ParamCmdMap xFX_817208012_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1PhaseStatus", std::make_tuple("ChgAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgSts1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_817208012 Command Map
ParamCmdMap xFX_817208012_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("ChgAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMaxChargeCurrent", std::make_tuple("ChgCfgCmd1", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_817208012 Fault Lookup
Fault xFX_817208012_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_817208012 Warning Lookup
Warning xFX_817208012_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_817208012 Model Map
Model xFX_817208012_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_817208012_PARAM_MAP,
    xFX_817208012_CMD_MAP,
    xFX_817208012_FAULT_LOOKUP,
    xFX_817208012_WARNING_LOOKUP
);

// xFSW_RVC_2012_120_60 Parameter Map
ParamCmdMap xFSW_RVC_2012_120_60_PARAM_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgSts1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgSts1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgSts1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgSts2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgSts2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RealPower", std::make_tuple("ChgAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1ReactivePower", std::make_tuple("ChgAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1QualStatus", std::make_tuple("ChgAcSts4", "QualifStat", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgSts1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgSts2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgSts2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgSts3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgSts3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgSts4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgSts4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgSts", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgSts", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ForceCharge", std::make_tuple("ChgSts", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstSts", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgSts1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgSts1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgSts2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgSts3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgSts3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"XfmrTemp", std::make_tuple("InvTempSts", "XfmrTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdSts", "CurrentMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "InverterEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvSts", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocStsACInput0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocStsACOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocStsDCInputOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_2012_120_60 Command Map
ParamCmdMap xFSW_RVC_2012_120_60_CMD_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgCmd1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgCmd1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgCmd1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgCmd2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgCmd2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgCmd1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgCmd2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgCmd2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgCmd3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgCmd3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgCmd4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgCmd4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgCmd", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgCmd", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ForceCharge", std::make_tuple("ChgCmd", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstAssign", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgCmd1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgCmd1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgCmd2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgCmd3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgCmd3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdCfg", "DesiredMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvCmd", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("GenRst", "ClrFlts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("GenRst", "RstDflt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_2012_120_60 Fault Lookup
Fault xFSW_RVC_2012_120_60_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 1, 11, 46, "Controller Fault"),
    std::make_tuple(0, 0, 1, 11, 51, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 53, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 66, "System Configuration Fault"),
    std::make_tuple(0, 0, 3, 13, 52, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 55, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 56, "EEPROM Error"),
    std::make_tuple(0, 1, 2, 11, 70, "System Device ID Configuration Fault"),
    std::make_tuple(0, 1, 3, 11, 67, "Watchdog Error"),
    std::make_tuple(0, 1, 4, 11, 54, "EEPROM Error"),
    std::make_tuple(0, 1, 4, 11, 60, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 61, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 62, "Unit Fault"),
    std::make_tuple(1, -1, 0, 0, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 47, "DC Under Immediate Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 0, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(1, -1, 2, 2, 79, "Battery Sensor Short"),
    std::make_tuple(1, -1, 7, 11, 22, "Relay[s] Welded"),
    std::make_tuple(1, 1, 7, 7, 17, "Relay[s] Welded"),
    std::make_tuple(1, 17, 7, 7, 18, "Relay[s] Welded"),
    std::make_tuple(2, -1, 0, 0, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 0, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 0, 85, "Power Board Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 2, 63, "Power Board Temperature Sensor Failed"),
    std::make_tuple(3, -1, 0, 0, 45, "Capacitor Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 0, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 1, 2, 73, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 7, 11, 71, "System Master Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 76, "System Slave No Master"),
    std::make_tuple(3, -1, 7, 11, 77, "System No Phase1 Master"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(4, -1, 0, 11, 74, "System Other Unit Fault"),
    std::make_tuple(4, -1, 0, 11, 75, "System Other Unit Lost"),
    std::make_tuple(4, -1, 1, 8, 69, "External Sync Failed"),
    std::make_tuple(129, -1, 1, 0, 64, "AC Overload Line 1"),
    std::make_tuple(129, -1, 6, 11, 88, "MPPT Ground Fault"),
    std::make_tuple(129, 65, 0, 0, 2, "AC Output Over Voltage"),
    std::make_tuple(129, 65, 0, 1, 1, "AC Output Under Voltage"),
};

// xFSW_RVC_2012_120_60 Warning Lookup
Warning xFSW_RVC_2012_120_60_WARNING_LOOKUP = {
    std::make_tuple(1, -1, 0, 15, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 17, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 2, 93, "Battery Temperature Sensor Error"),
    std::make_tuple(1, -1, 2, 15, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(2, -1, 0, 15, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 15, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 2, 94, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 1, 15, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 4, 11, 95, "Equalization Abort"),
    std::make_tuple(3, -1, 4, 11, 96, "Cannot Equalize"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(130, -1, 5, 11, 92, "Connected to Two of Three Phase"),
};

// xFSW_RVC_2012_120_60 Model Map
Model xFSW_RVC_2012_120_60_MODEL_MAP = std::make_tuple(
    "invchg",
    xFSW_RVC_2012_120_60_PARAM_MAP,
    xFSW_RVC_2012_120_60_CMD_MAP,
    xFSW_RVC_2012_120_60_FAULT_LOOKUP,
    xFSW_RVC_2012_120_60_WARNING_LOOKUP
);

// xFSW_RVC_3012_120_60 Parameter Map
ParamCmdMap xFSW_RVC_3012_120_60_PARAM_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgSts1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgSts1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgSts1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgSts2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgSts2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RealPower", std::make_tuple("ChgAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1ReactivePower", std::make_tuple("ChgAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1QualStatus", std::make_tuple("ChgAcSts4", "QualifStat", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgSts1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgSts2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgSts2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgSts3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgSts3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgSts4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgSts4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgSts", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgSts", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ForceCharge", std::make_tuple("ChgSts", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstSts", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgSts1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgSts1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgSts2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgSts3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgSts3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"XfmrTemp", std::make_tuple("InvTempSts", "XfmrTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdSts", "CurrentMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "InverterEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvSts", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocStsACInput0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocStsACOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocStsDCInputOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_3012_120_60 Command Map
ParamCmdMap xFSW_RVC_3012_120_60_CMD_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgCmd1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgCmd1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgCmd1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgCmd2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgCmd2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgCmd1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgCmd2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgCmd2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgCmd3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgCmd3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgCmd4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgCmd4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgCmd", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgCmd", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ForceCharge", std::make_tuple("ChgCmd", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstAssign", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgCmd1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgCmd1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgCmd2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgCmd3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgCmd3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdCfg", "DesiredMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvCmd", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("GenRst", "ClrFlts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("GenRst", "RstDflt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_3012_120_60 Fault Lookup
Fault xFSW_RVC_3012_120_60_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 1, 11, 46, "Controller Fault"),
    std::make_tuple(0, 0, 1, 11, 51, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 53, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 66, "System Configuration Fault"),
    std::make_tuple(0, 0, 3, 13, 52, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 55, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 56, "EEPROM Error"),
    std::make_tuple(0, 1, 2, 11, 70, "System Device ID Configuration Fault"),
    std::make_tuple(0, 1, 3, 11, 67, "Watchdog Error"),
    std::make_tuple(0, 1, 4, 11, 54, "EEPROM Error"),
    std::make_tuple(0, 1, 4, 11, 60, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 61, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 62, "Unit Fault"),
    std::make_tuple(1, -1, 0, 0, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 47, "DC Under Immediate Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 0, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(1, -1, 2, 2, 79, "Battery Sensor Short"),
    std::make_tuple(1, -1, 7, 11, 22, "Relay[s] Welded"),
    std::make_tuple(1, 1, 7, 7, 17, "Relay[s] Welded"),
    std::make_tuple(1, 17, 7, 7, 18, "Relay[s] Welded"),
    std::make_tuple(2, -1, 0, 0, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 0, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 0, 85, "Power Board Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 2, 63, "Power Board Temperature Sensor Failed"),
    std::make_tuple(3, -1, 0, 0, 45, "Capacitor Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 0, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 1, 2, 73, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 7, 11, 71, "System Master Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 76, "System Slave No Master"),
    std::make_tuple(3, -1, 7, 11, 77, "System No Phase1 Master"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(4, -1, 0, 11, 74, "System Other Unit Fault"),
    std::make_tuple(4, -1, 0, 11, 75, "System Other Unit Lost"),
    std::make_tuple(4, -1, 1, 8, 69, "External Sync Failed"),
    std::make_tuple(129, -1, 1, 0, 64, "AC Overload Line 1"),
    std::make_tuple(129, -1, 6, 11, 88, "MPPT Ground Fault"),
    std::make_tuple(129, 65, 0, 0, 2, "AC Output Over Voltage"),
    std::make_tuple(129, 65, 0, 1, 1, "AC Output Under Voltage"),
};

// xFSW_RVC_3012_120_60 Warning Lookup
Warning xFSW_RVC_3012_120_60_WARNING_LOOKUP = {
    std::make_tuple(1, -1, 0, 15, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 17, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 2, 93, "Battery Temperature Sensor Error"),
    std::make_tuple(1, -1, 2, 15, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(2, -1, 0, 15, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 15, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 2, 94, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 1, 15, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 4, 11, 95, "Equalization Abort"),
    std::make_tuple(3, -1, 4, 11, 96, "Cannot Equalize"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(130, -1, 5, 11, 92, "Connected to Two of Three Phase"),
};

// xFSW_RVC_3012_120_60 Model Map
Model xFSW_RVC_3012_120_60_MODEL_MAP = std::make_tuple(
    "invchg",
    xFSW_RVC_3012_120_60_PARAM_MAP,
    xFSW_RVC_3012_120_60_CMD_MAP,
    xFSW_RVC_3012_120_60_FAULT_LOOKUP,
    xFSW_RVC_3012_120_60_WARNING_LOOKUP
);

// xFSW_RVC_2024_120_60 Parameter Map
ParamCmdMap xFSW_RVC_2024_120_60_PARAM_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgSts1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgSts1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgSts1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgSts2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgSts2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RealPower", std::make_tuple("ChgAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1ReactivePower", std::make_tuple("ChgAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1QualStatus", std::make_tuple("ChgAcSts4", "QualifStat", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgSts1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgSts2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgSts2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgSts3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgSts3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgSts4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgSts4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgSts", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgSts", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ForceCharge", std::make_tuple("ChgSts", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstSts", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgSts1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgSts1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgSts2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgSts3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgSts3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"XfmrTemp", std::make_tuple("InvTempSts", "XfmrTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdSts", "CurrentMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "InverterEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvSts", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocStsACInput0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocStsACOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocStsDCInputOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_2024_120_60 Command Map
ParamCmdMap xFSW_RVC_2024_120_60_CMD_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgCmd1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgCmd1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgCmd1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgCmd2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgCmd2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgCmd1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgCmd2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgCmd2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgCmd3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgCmd3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgCmd4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgCmd4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgCmd", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgCmd", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ForceCharge", std::make_tuple("ChgCmd", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstAssign", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgCmd1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgCmd1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgCmd2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgCmd3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgCmd3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdCfg", "DesiredMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvCmd", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("GenRst", "ClrFlts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("GenRst", "RstDflt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_2024_120_60 Fault Lookup
Fault xFSW_RVC_2024_120_60_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 1, 11, 46, "Controller Fault"),
    std::make_tuple(0, 0, 1, 11, 51, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 53, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 66, "System Configuration Fault"),
    std::make_tuple(0, 0, 3, 13, 52, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 55, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 56, "EEPROM Error"),
    std::make_tuple(0, 1, 2, 11, 70, "System Device ID Configuration Fault"),
    std::make_tuple(0, 1, 3, 11, 67, "Watchdog Error"),
    std::make_tuple(0, 1, 4, 11, 54, "EEPROM Error"),
    std::make_tuple(0, 1, 4, 11, 60, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 61, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 62, "Unit Fault"),
    std::make_tuple(1, -1, 0, 0, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 47, "DC Under Immediate Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 0, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(1, -1, 2, 2, 79, "Battery Sensor Short"),
    std::make_tuple(1, -1, 7, 11, 22, "Relay[s] Welded"),
    std::make_tuple(1, 1, 7, 7, 17, "Relay[s] Welded"),
    std::make_tuple(1, 17, 7, 7, 18, "Relay[s] Welded"),
    std::make_tuple(2, -1, 0, 0, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 0, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 0, 85, "Power Board Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 2, 63, "Power Board Temperature Sensor Failed"),
    std::make_tuple(3, -1, 0, 0, 45, "Capacitor Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 0, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 1, 2, 73, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 7, 11, 71, "System Master Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 76, "System Slave No Master"),
    std::make_tuple(3, -1, 7, 11, 77, "System No Phase1 Master"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(4, -1, 0, 11, 74, "System Other Unit Fault"),
    std::make_tuple(4, -1, 0, 11, 75, "System Other Unit Lost"),
    std::make_tuple(4, -1, 1, 8, 69, "External Sync Failed"),
    std::make_tuple(129, -1, 1, 0, 64, "AC Overload Line 1"),
    std::make_tuple(129, -1, 6, 11, 88, "MPPT Ground Fault"),
    std::make_tuple(129, 65, 0, 0, 2, "AC Output Over Voltage"),
    std::make_tuple(129, 65, 0, 1, 1, "AC Output Under Voltage"),
};

// xFSW_RVC_2024_120_60 Warning Lookup
Warning xFSW_RVC_2024_120_60_WARNING_LOOKUP = {
    std::make_tuple(1, -1, 0, 15, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 17, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 2, 93, "Battery Temperature Sensor Error"),
    std::make_tuple(1, -1, 2, 15, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(2, -1, 0, 15, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 15, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 2, 94, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 1, 15, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 4, 11, 95, "Equalization Abort"),
    std::make_tuple(3, -1, 4, 11, 96, "Cannot Equalize"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(130, -1, 5, 11, 92, "Connected to Two of Three Phase"),
};

// xFSW_RVC_2024_120_60 Model Map
Model xFSW_RVC_2024_120_60_MODEL_MAP = std::make_tuple(
    "invchg",
    xFSW_RVC_2024_120_60_PARAM_MAP,
    xFSW_RVC_2024_120_60_CMD_MAP,
    xFSW_RVC_2024_120_60_FAULT_LOOKUP,
    xFSW_RVC_2024_120_60_WARNING_LOOKUP
);

// xFSW_RVC_3024_120_60 Parameter Map
ParamCmdMap xFSW_RVC_3024_120_60_PARAM_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgSts1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgSts1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgSts1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgSts2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgSts2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("ChgAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("ChgAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Freq", std::make_tuple("ChgAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RealPower", std::make_tuple("ChgAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1Line1ReactivePower", std::make_tuple("ChgAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcIn1QualStatus", std::make_tuple("ChgAcSts4", "QualifStat", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgSts1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgSts1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatterySensorPresent", std::make_tuple("ChgCfgSts1", "BattSensPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgSts1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgSts1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgSts2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgSts2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgSts2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2DefBattTemp")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgSts2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgSts3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgSts3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgSts3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgSts3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgSts4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgSts4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgSts", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgSts", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgVolts", std::make_tuple("ChgSts", "ChgV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgCurrent", std::make_tuple("ChgSts", "ChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("ChgSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgSts", "DefltStatePwrUp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ForceCharge", std::make_tuple("ChgSts", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstSts", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1")}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgSts1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgSts1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgSts2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgSts3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgSts3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"XfmrTemp", std::make_tuple("InvTempSts", "XfmrTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdSts", "CurrentMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "InverterEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvSts", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocStsACInput0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocStsACOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocStsDCInputOut0", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_3024_120_60 Command Map
ParamCmdMap xFSW_RVC_3024_120_60_CMD_MAP = {
    {"UtilityUnderVolt", std::make_tuple("ChgAcFltCfgCmd1", "LoV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityOverVolt", std::make_tuple("ChgAcFltCfgCmd1", "HiV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityQualTimeout", std::make_tuple("ChgAcFltCfgCmd1", "QualTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UtilityOverFreq", std::make_tuple("ChgAcFltCfgCmd2", "HiFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"UtilityUnderFreq", std::make_tuple("ChgAcFltCfgCmd2", "LoFreqLimit", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"ChargerAlgorithm", std::make_tuple("ChgCfgCmd1", "ChgAlg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerMode", std::make_tuple("ChgCfgCmd1", "ChgMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("ChgCfgCmd1", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("ChgCfgCmd1", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxChargeCurrentPercent", std::make_tuple("ChgCfgCmd2", "MaxChgIPer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ACBreakerRating", std::make_tuple("ChgCfgCmd2", "ShoreBrkSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DefaultBatteryTemperature", std::make_tuple("ChgCfgCmd2", "DefBattTemp", std::vector<std::tuple<std::string, std::string>>{}, "fnDefBattTemp2Cmd")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("ChgCfgCmd2", "ReChgVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBulkVoltage", std::make_tuple("ChgCfgCmd3", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomAbsorptionVoltage", std::make_tuple("ChgCfgCmd3", "AbsorpV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("ChgCfgCmd3", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomBatteryTemperatureCompensation", std::make_tuple("ChgCfgCmd3", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("ChgCfgCmd4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerFloatTime", std::make_tuple("ChgCfgCmd4", "FloatTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("ChgEqlzCfgCmd", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationTime", std::make_tuple("ChgEqlzCfgCmd", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChgEn2ChgCmdSts")},
    {"ForceCharge", std::make_tuple("ChgCmd", "ForceChg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgStartEqlz", std::make_tuple("ChgCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnStartEqlz2ChgCmdSts")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceAddress", std::make_tuple("InstAssign", "BaseIntAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchThreshold", std::make_tuple("InvCfgCmd1", "LoadSensePwrThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchDelayTime", std::make_tuple("InvCfgCmd1", "LoadSenseIntvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterHighBatteryCutoutVoltage", std::make_tuple("InvCfgCmd2", "DcSrcSdVMax", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"StackingMode", std::make_tuple("InvCfgCmd3", "StackMd", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportCurrent", std::make_tuple("InvCfgCmd3", "GenSupportEngI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OpMode", std::make_tuple("PmDevMdCfg", "DesiredMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenSupportEnable", std::make_tuple("InvCmd", "GenSupportEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcInput0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACInput"), std::make_tuple("AssocInst", "0")}, "")},
    {"AcOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "ACOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"DcInputOut0", std::make_tuple("PmAssocCfg", "AssocId", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("AssocType", "DCInputOut"), std::make_tuple("AssocInst", "0")}, "")},
    {"ClearFaultsWarnings", std::make_tuple("GenRst", "ClrFlts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("GenRst", "RstDflt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xFSW_RVC_3024_120_60 Fault Lookup
Fault xFSW_RVC_3024_120_60_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 1, 11, 46, "Controller Fault"),
    std::make_tuple(0, 0, 1, 11, 51, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 53, "EEPROM Error"),
    std::make_tuple(0, 0, 3, 2, 66, "System Configuration Fault"),
    std::make_tuple(0, 0, 3, 13, 52, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 55, "EEPROM Error"),
    std::make_tuple(0, 0, 4, 11, 56, "EEPROM Error"),
    std::make_tuple(0, 1, 2, 11, 70, "System Device ID Configuration Fault"),
    std::make_tuple(0, 1, 3, 11, 67, "Watchdog Error"),
    std::make_tuple(0, 1, 4, 11, 54, "EEPROM Error"),
    std::make_tuple(0, 1, 4, 11, 60, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 61, "Unit Fault"),
    std::make_tuple(0, 1, 4, 11, 62, "Unit Fault"),
    std::make_tuple(1, -1, 0, 0, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 47, "DC Under Immediate Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 1, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 0, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(1, -1, 2, 2, 79, "Battery Sensor Short"),
    std::make_tuple(1, -1, 7, 11, 22, "Relay[s] Welded"),
    std::make_tuple(1, 1, 7, 7, 17, "Relay[s] Welded"),
    std::make_tuple(1, 17, 7, 7, 18, "Relay[s] Welded"),
    std::make_tuple(2, -1, 0, 0, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 0, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 0, 85, "Power Board Over Temperature Shutdown"),
    std::make_tuple(2, -1, 2, 2, 63, "Power Board Temperature Sensor Failed"),
    std::make_tuple(3, -1, 0, 0, 45, "Capacitor Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 0, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 1, 2, 73, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 7, 11, 71, "System Master Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 76, "System Slave No Master"),
    std::make_tuple(3, -1, 7, 11, 77, "System No Phase1 Master"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(4, -1, 0, 11, 74, "System Other Unit Fault"),
    std::make_tuple(4, -1, 0, 11, 75, "System Other Unit Lost"),
    std::make_tuple(4, -1, 1, 8, 69, "External Sync Failed"),
    std::make_tuple(129, -1, 1, 0, 64, "AC Overload Line 1"),
    std::make_tuple(129, -1, 6, 11, 88, "MPPT Ground Fault"),
    std::make_tuple(129, 65, 0, 0, 2, "AC Output Over Voltage"),
    std::make_tuple(129, 65, 0, 1, 1, "AC Output Under Voltage"),
};

// xFSW_RVC_3024_120_60 Warning Lookup
Warning xFSW_RVC_3024_120_60_WARNING_LOOKUP = {
    std::make_tuple(1, -1, 0, 15, 49, "DC Over Voltage Shutdown"),
    std::make_tuple(1, -1, 0, 17, 48, "DC Under Voltage Shutdown"),
    std::make_tuple(1, -1, 2, 2, 93, "Battery Temperature Sensor Error"),
    std::make_tuple(1, -1, 2, 15, 44, "Battery Over Temperature Shutdown"),
    std::make_tuple(2, -1, 0, 15, 57, "FET1 Over Temperature Shutdown"),
    std::make_tuple(2, -1, 1, 15, 58, "FET2 Over Temperature Shutdown"),
    std::make_tuple(3, -1, 1, 2, 94, "Transformer Temperature Sensor Disconnected"),
    std::make_tuple(3, -1, 1, 15, 68, "Transformer Over Temperature"),
    std::make_tuple(3, -1, 4, 11, 95, "Equalization Abort"),
    std::make_tuple(3, -1, 4, 11, 96, "Cannot Equalize"),
    std::make_tuple(3, -1, 7, 11, 72, "System AC Association Configuration Fault"),
    std::make_tuple(3, -1, 7, 11, 87, "Other Unit Frequency Different"),
    std::make_tuple(130, -1, 5, 11, 92, "Connected to Two of Three Phase"),
};

// xFSW_RVC_3024_120_60 Model Map
Model xFSW_RVC_3024_120_60_MODEL_MAP = std::make_tuple(
    "invchg",
    xFSW_RVC_3024_120_60_PARAM_MAP,
    xFSW_RVC_3024_120_60_CMD_MAP,
    xFSW_RVC_3024_120_60_FAULT_LOOKUP,
    xFSW_RVC_3024_120_60_WARNING_LOOKUP
);

// xFX_8061212 Parameter Map
ParamCmdMap xFX_8061212_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("InOut", "Off")}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8061212 Command Map
ParamCmdMap xFX_8061212_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8061212 Fault Lookup
Fault xFX_8061212_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8061212 Warning Lookup
Warning xFX_8061212_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8061212 Model Map
Model xFX_8061212_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8061212_PARAM_MAP,
    xFX_8061212_CMD_MAP,
    xFX_8061212_FAULT_LOOKUP,
    xFX_8061212_WARNING_LOOKUP
);

// xFX_8171000 Parameter Map
ParamCmdMap xFX_8171000_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("InOut", "Off")}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8171000 Command Map
ParamCmdMap xFX_8171000_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8171000 Fault Lookup
Fault xFX_8171000_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8171000 Warning Lookup
Warning xFX_8171000_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8171000 Model Map
Model xFX_8171000_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8171000_PARAM_MAP,
    xFX_8171000_CMD_MAP,
    xFX_8171000_FAULT_LOOKUP,
    xFX_8171000_WARNING_LOOKUP
);

// xFX_8172000 Parameter Map
ParamCmdMap xFX_8172000_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("InOut", "Off")}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8172000 Command Map
ParamCmdMap xFX_8172000_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8172000 Fault Lookup
Fault xFX_8172000_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8172000 Warning Lookup
Warning xFX_8172000_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8172000 Model Map
Model xFX_8172000_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8172000_PARAM_MAP,
    xFX_8172000_CMD_MAP,
    xFX_8172000_FAULT_LOOKUP,
    xFX_8172000_WARNING_LOOKUP
);

// xFX_8173000 Parameter Map
ParamCmdMap xFX_8173000_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("InOut", "Off")}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_8173000 Command Map
ParamCmdMap xFX_8173000_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_8173000 Fault Lookup
Fault xFX_8173000_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_8173000 Warning Lookup
Warning xFX_8173000_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_8173000 Model Map
Model xFX_8173000_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_8173000_PARAM_MAP,
    xFX_8173000_CMD_MAP,
    xFX_8173000_FAULT_LOOKUP,
    xFX_8173000_WARNING_LOOKUP
);

// xFX_817200021 Parameter Map
ParamCmdMap xFX_817200021_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("InOut", "Off")}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_817200021 Command Map
ParamCmdMap xFX_817200021_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_817200021 Fault Lookup
Fault xFX_817200021_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_817200021 Warning Lookup
Warning xFX_817200021_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_817200021 Model Map
Model xFX_817200021_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_817200021_PARAM_MAP,
    xFX_817200021_CMD_MAP,
    xFX_817200021_FAULT_LOOKUP,
    xFX_817200021_WARNING_LOOKUP
);

// xFX_817200012 Parameter Map
ParamCmdMap xFX_817200012_PARAM_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgSts1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcIn1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "Off")}, "")},
    {"AcIn1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("InOut", "Off")}, "")},
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcOut1Line1RmsVolts", std::make_tuple("InvAcSts1", "RmsV", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RmsCurrent", std::make_tuple("InvAcSts1", "RmsI", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Freq", std::make_tuple("InvAcSts1", "Freq", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1PhaseStatus", std::make_tuple("InvAcSts3", "PhsSts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1RealPower", std::make_tuple("InvAcSts3", "RealPwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"AcOut1Line1ReactivePower", std::make_tuple("InvAcSts3", "ReactivePwr", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Line", "Line 1"), std::make_tuple("InOut", "On")}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgSts1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgSts3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgSts3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgSts4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "fnInvChgSts4OutACVolt2Enum")},
    {"InverterOutFrequency", std::make_tuple("InvCfgSts4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgSts4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgSts4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvOpState", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvSts", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Fet1Temp", std::make_tuple("InvTempSts", "Fet1Temp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("ProdIdent", "Unit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SysDateTimeSts", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvSts", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnInvSts2InvEnDis")},
    {"RestoreOemDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgSts", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2PwrSaveTime")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgSts", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgSts", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgSts", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgSts", "OvrFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2InvFaultRecovery")},
};

// xFX_817200012 Command Map
ParamCmdMap xFX_817200012_CMD_MAP = {
    {"AcUvSdThresh", std::make_tuple("InvAcFltCfgCmd1", "ExtremeLoV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutVoltage", std::make_tuple("InvCfgCmd1", "DcSrcSdVMin", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterLowBatteryCutoutDelayTime", std::make_tuple("InvCfgCmd3", "DcSrcShtDwnDly", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LbcoRecovThresh", std::make_tuple("InvCfgCmd3", "DcUvSdRecLvl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutVoltage", std::make_tuple("InvCfgCmd4", "OutACVolt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutFrequency", std::make_tuple("InvCfgCmd4", "OutFreq", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimit", std::make_tuple("InvCfgCmd4", "ACOutPwrLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterOutPowerLimitTimer", std::make_tuple("InvCfgCmd4", "ACOutPwrTimeLim", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterSearchEnable", std::make_tuple("InvCmd", "LoadSenseEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TimeZone", std::make_tuple("SetSysDateTime", "Tz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InverterEnable", std::make_tuple("InvCmd", "InvEn", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreOemDefaults", std::make_tuple("GenRst", "RstOEM", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Reboot", std::make_tuple("GenRst", "Reboot", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrSaveTime", std::make_tuple("PmFXCCCfgCmd", "PwrSvHr", std::vector<std::tuple<std::string, std::string>>{}, "fnPwrSaveTime2Cmd")},
    {"InvIgnitionContrl", std::make_tuple("PmFXCCCfgCmd", "InvIgnCtrl", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TransferMode", std::make_tuple("PmFXCCCfgCmd", "TransMode", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AudibleAlarm", std::make_tuple("PmFXCCCfgCmd", "AlarmEnDis", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"InvFaultRecovery", std::make_tuple("PmFXCCCfgCmd", "OverFltRecEnDis", std::vector<std::tuple<std::string, std::string>>{}, "fnInvFaultRecovery2Cmd")},
};

// xFX_817200012 Fault Lookup
Fault xFX_817200012_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 6, 0, 4, "Over-temperature shutdown"),
    std::make_tuple(0, 0, 6, 3, 48, "NTC No Connect"),
    std::make_tuple(1, -1, 0, 0, 2, "High battery voltage shutdown"),
    std::make_tuple(1, -1, 0, 1, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 4, 33, "Battery Short"),
    std::make_tuple(1, -1, 0, 11, 10, "Bus Soft Fail"),
    std::make_tuple(1, -1, 1, 11, 17, "Current Sensor Fail"),
    std::make_tuple(1, -1, 2, 1, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 8, 8, "Fan lock error"),
    std::make_tuple(129, 1, 0, 0, 14, "Inverter voltage high"),
    std::make_tuple(129, 1, 0, 1, 53, "Inverter voltage low"),
    std::make_tuple(129, 1, 0, 11, 16, "OP DC Over Volt"),
    std::make_tuple(129, 1, 1, 0, 18, "Inverter over current"),
    std::make_tuple(129, 1, 1, 6, 43, "OVP Short"),
    std::make_tuple(129, 1, 1, 11, 13, "Inverter Soft Fail"),
    std::make_tuple(130, -1, 2, 0, 3, "AC output overload shutdown"),
    std::make_tuple(130, 1, 4, 11, 32, "OP Wave Fail"),
    std::make_tuple(134, -1, 0, 0, 11, "Bus over voltage"),
    std::make_tuple(134, -1, 0, 1, 12, "Bus under voltage"),
};

// xFX_817200012 Warning Lookup
Warning xFX_817200012_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 11, 31, "EEPROM fault"),
    std::make_tuple(0, 0, 6, 16, 7, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(1, -1, 0, 3, 9, "Battery Open"),
    std::make_tuple(1, -1, 0, 17, 1, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 0, 18, 5, "Low battery voltage shutdown is imminent"),
    std::make_tuple(1, -1, 2, 0, 21, "Battery temperature is high"),
    std::make_tuple(2, -1, 3, 7, 47, "Over-temperature alarm and fan lock alarm"),
    std::make_tuple(129, 1, 0, 11, 34, "Line fail"),
    std::make_tuple(130, -1, 2, 16, 6, "AC output overload warning"),
    std::make_tuple(130, 1, 2, 15, 35, "Power limit warning"),
};

// xFX_817200012 Model Map
Model xFX_817200012_MODEL_MAP = std::make_tuple(
    "invchg",
    xFX_817200012_PARAM_MAP,
    xFX_817200012_CMD_MAP,
    xFX_817200012_FAULT_LOOKUP,
    xFX_817200012_WARNING_LOOKUP
);

// x8 Parameter Map
ParamCmdMap x8_PARAM_MAP = {
    {"BattVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("DCSrcSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemain", std::make_tuple("DCSrcSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityRemain", std::make_tuple("DCSrcSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredChgState", std::make_tuple("DCSrcSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredBattVolts", std::make_tuple("DCSrcSts4", "DesDcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredBattCurrent", std::make_tuple("DCSrcSts4", "DesDcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DischargerSwitch", std::make_tuple("DcSrcSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("DcSrcSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacity", std::make_tuple("DcSrcSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MaxRecTemp", std::make_tuple("PmLithionicsSts", "MaxRecTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"MinRecTemp", std::make_tuple("PmLithionicsSts", "MinRecTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HighVoltageState", std::make_tuple("PmLithionicsSts", "HighVoltageState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgSrcDet", std::make_tuple("PmLithionicsSts", "ChgSrcDet", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NeverDieResState", std::make_tuple("PmLithionicsSts", "NeverDieResState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OptoLoopOpen", std::make_tuple("PmLithionicsSts", "OptoLoopOpen", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ResVoltageRange", std::make_tuple("PmLithionicsSts", "ResVoltageRange", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltageState", std::make_tuple("PmLithionicsSts", "LowVoltageState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattProtState", std::make_tuple("PmLithionicsSts", "BattProtState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PwrOffState", std::make_tuple("PmLithionicsSts", "PwrOffState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AuxCntctState", std::make_tuple("PmLithionicsSts", "AuxCntctState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AuxCntctErr", std::make_tuple("PmLithionicsSts", "AuxCntctErr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PreChgErr", std::make_tuple("PmLithionicsSts", "PreChgErr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CntctFlutter", std::make_tuple("PmLithionicsSts", "CntctFlutter", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AcPwrPres", std::make_tuple("PmLithionicsSts", "AcPwrPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TsmChgPres", std::make_tuple("PmLithionicsSts", "TsmChgPres", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TsmChgErr", std::make_tuple("PmLithionicsSts", "TsmChgErr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"TempInterSensErr", std::make_tuple("PmLithionicsSts", "TempInterSensErr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AgsrState", std::make_tuple("PmLithionicsSts", "AgsrState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HotTempState", std::make_tuple("PmLithionicsSts", "HotTempState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ColdTempState", std::make_tuple("PmLithionicsSts", "ColdTempState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"AuxIn1State", std::make_tuple("PmLithionicsSts", "AuxIn1State", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgDisState", std::make_tuple("PmLithionicsSts", "ChgDisState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OverCurrState", std::make_tuple("PmLithionicsSts", "OverCurrState", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x8 Command Map
ParamCmdMap x8_CMD_MAP = {
    {"DischargerSwitch", std::make_tuple("DcSrcCmd", "DesPwrOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("DcSrcCmd", "DesChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x8 Fault Lookup
Fault x8_FAULT_LOOKUP = {
};

// x8 Warning Lookup
Warning x8_WARNING_LOOKUP = {
};

// x8 Model Map
Model x8_MODEL_MAP = std::make_tuple(
    "bms",
    x8_PARAM_MAP,
    x8_CMD_MAP,
    x8_FAULT_LOOKUP,
    x8_WARNING_LOOKUP
);

// x0884_0310_12 Parameter Map
ParamCmdMap x0884_0310_12_PARAM_MAP = {
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("BattSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("BattSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("BattSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattStateOfCharge", std::make_tuple("BattSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemain", std::make_tuple("BattSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemainInterp", std::make_tuple("BattSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityRemain", std::make_tuple("BattSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityPer", std::make_tuple("BattSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredChgState", std::make_tuple("BattSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltLimitSts", std::make_tuple("BattSts6", "HiVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltDisconSts", std::make_tuple("BattSts6", "HiVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltLimitSts", std::make_tuple("BattSts6", "LowVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltDisconSts", std::make_tuple("BattSts6", "LowVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocLimitSts", std::make_tuple("BattSts6", "LowSocLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocDisconSts", std::make_tuple("BattSts6", "LowSocDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempLimitSts", std::make_tuple("BattSts6", "LowDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempDisconSts", std::make_tuple("BattSts6", "LowDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempLimitSts", std::make_tuple("BattSts6", "HiDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempDisconSts", std::make_tuple("BattSts6", "HiDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcLimitSts", std::make_tuple("BattSts6", "HiAmpDcSrcLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcDisconSts", std::make_tuple("BattSts6", "HiAmpDcSrcDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DischargerSwitch", std::make_tuple("BattSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("BattSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargeDetect", std::make_tuple("BattSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattReserveStatus", std::make_tuple("BattSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacity", std::make_tuple("BattSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattPower", std::make_tuple("BattSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDataSource", std::make_tuple("DCSrcSts1", "DevPri", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTemp", std::make_tuple("DCSrcSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemain", std::make_tuple("DCSrcSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemainInterp", std::make_tuple("DCSrcSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityRemain", std::make_tuple("DCSrcSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityPer", std::make_tuple("DCSrcSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDesiredChgState", std::make_tuple("DCSrcSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDischargerSwitch", std::make_tuple("DcSrcSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargerSwitch", std::make_tuple("DcSrcSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargeDetect", std::make_tuple("DcSrcSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankReserveStatus", std::make_tuple("DcSrcSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacity", std::make_tuple("DcSrcSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankPower", std::make_tuple("DcSrcSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CanAddr", std::make_tuple("PmPpnReadRsp", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnReadRsp", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnReadRsp", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnReadRsp", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnReadRsp", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("PmPpnReadRsp", "SwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ProdId", std::make_tuple("PmPpnReadRsp", "ProdId", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RatedCapacity", std::make_tuple("PmPpnReadRsp", "RatedCapacity", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInSeries", std::make_tuple("PmPpnReadRsp", "CellsInSeries", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInParallel", std::make_tuple("PmPpnReadRsp", "CellsInParallel", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BmsSerialNum", std::make_tuple("PmPpnReadRsp", "BmsSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcSerialNum", std::make_tuple("PmPpnReadRsp", "BpcSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcHwVer", std::make_tuple("PmPpnReadRsp", "BpcHwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnReadRsp", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnReadRsp", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0310_12 Command Map
ParamCmdMap x0884_0310_12_CMD_MAP = {
    {"CanAddr", std::make_tuple("PmPpnWriteCmd", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnWriteCmd", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnWriteCmd", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnWriteCmd", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnWriteCmd", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnWriteCmd", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnWriteCmd", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0310_12 Fault Lookup
Fault x0884_0310_12_FAULT_LOOKUP = {
};

// x0884_0310_12 Warning Lookup
Warning x0884_0310_12_WARNING_LOOKUP = {
};

// x0884_0310_12 Model Map
Model x0884_0310_12_MODEL_MAP = std::make_tuple(
    "bms",
    x0884_0310_12_PARAM_MAP,
    x0884_0310_12_CMD_MAP,
    x0884_0310_12_FAULT_LOOKUP,
    x0884_0310_12_WARNING_LOOKUP
);

// x0884_0410_12 Parameter Map
ParamCmdMap x0884_0410_12_PARAM_MAP = {
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("BattSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("BattSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("BattSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattStateOfCharge", std::make_tuple("BattSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemain", std::make_tuple("BattSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemainInterp", std::make_tuple("BattSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityRemain", std::make_tuple("BattSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityPer", std::make_tuple("BattSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredChgState", std::make_tuple("BattSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltLimitSts", std::make_tuple("BattSts6", "HiVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltDisconSts", std::make_tuple("BattSts6", "HiVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltLimitSts", std::make_tuple("BattSts6", "LowVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltDisconSts", std::make_tuple("BattSts6", "LowVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocLimitSts", std::make_tuple("BattSts6", "LowSocLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocDisconSts", std::make_tuple("BattSts6", "LowSocDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempLimitSts", std::make_tuple("BattSts6", "LowDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempDisconSts", std::make_tuple("BattSts6", "LowDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempLimitSts", std::make_tuple("BattSts6", "HiDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempDisconSts", std::make_tuple("BattSts6", "HiDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcLimitSts", std::make_tuple("BattSts6", "HiAmpDcSrcLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcDisconSts", std::make_tuple("BattSts6", "HiAmpDcSrcDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DischargerSwitch", std::make_tuple("BattSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("BattSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargeDetect", std::make_tuple("BattSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattReserveStatus", std::make_tuple("BattSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacity", std::make_tuple("BattSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattPower", std::make_tuple("BattSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDataSource", std::make_tuple("DCSrcSts1", "DevPri", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTemp", std::make_tuple("DCSrcSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemain", std::make_tuple("DCSrcSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemainInterp", std::make_tuple("DCSrcSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityRemain", std::make_tuple("DCSrcSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityPer", std::make_tuple("DCSrcSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDesiredChgState", std::make_tuple("DCSrcSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDischargerSwitch", std::make_tuple("DcSrcSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargerSwitch", std::make_tuple("DcSrcSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargeDetect", std::make_tuple("DcSrcSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankReserveStatus", std::make_tuple("DcSrcSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacity", std::make_tuple("DcSrcSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankPower", std::make_tuple("DcSrcSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CanAddr", std::make_tuple("PmPpnReadRsp", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnReadRsp", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnReadRsp", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnReadRsp", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnReadRsp", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("PmPpnReadRsp", "SwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ProdId", std::make_tuple("PmPpnReadRsp", "ProdId", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RatedCapacity", std::make_tuple("PmPpnReadRsp", "RatedCapacity", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInSeries", std::make_tuple("PmPpnReadRsp", "CellsInSeries", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInParallel", std::make_tuple("PmPpnReadRsp", "CellsInParallel", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BmsSerialNum", std::make_tuple("PmPpnReadRsp", "BmsSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcSerialNum", std::make_tuple("PmPpnReadRsp", "BpcSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcHwVer", std::make_tuple("PmPpnReadRsp", "BpcHwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnReadRsp", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnReadRsp", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0410_12 Command Map
ParamCmdMap x0884_0410_12_CMD_MAP = {
    {"CanAddr", std::make_tuple("PmPpnWriteCmd", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnWriteCmd", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnWriteCmd", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnWriteCmd", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnWriteCmd", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnWriteCmd", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnWriteCmd", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0410_12 Fault Lookup
Fault x0884_0410_12_FAULT_LOOKUP = {
};

// x0884_0410_12 Warning Lookup
Warning x0884_0410_12_WARNING_LOOKUP = {
};

// x0884_0410_12 Model Map
Model x0884_0410_12_MODEL_MAP = std::make_tuple(
    "bms",
    x0884_0410_12_PARAM_MAP,
    x0884_0410_12_CMD_MAP,
    x0884_0410_12_FAULT_LOOKUP,
    x0884_0410_12_WARNING_LOOKUP
);

// x0884_0310_12_01 Parameter Map
ParamCmdMap x0884_0310_12_01_PARAM_MAP = {
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("BattSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("BattSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("BattSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattStateOfCharge", std::make_tuple("BattSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemain", std::make_tuple("BattSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemainInterp", std::make_tuple("BattSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityRemain", std::make_tuple("BattSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityPer", std::make_tuple("BattSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredChgState", std::make_tuple("BattSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltLimitSts", std::make_tuple("BattSts6", "HiVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltDisconSts", std::make_tuple("BattSts6", "HiVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltLimitSts", std::make_tuple("BattSts6", "LowVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltDisconSts", std::make_tuple("BattSts6", "LowVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocLimitSts", std::make_tuple("BattSts6", "LowSocLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocDisconSts", std::make_tuple("BattSts6", "LowSocDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempLimitSts", std::make_tuple("BattSts6", "LowDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempDisconSts", std::make_tuple("BattSts6", "LowDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempLimitSts", std::make_tuple("BattSts6", "HiDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempDisconSts", std::make_tuple("BattSts6", "HiDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcLimitSts", std::make_tuple("BattSts6", "HiAmpDcSrcLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcDisconSts", std::make_tuple("BattSts6", "HiAmpDcSrcDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DischargerSwitch", std::make_tuple("BattSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("BattSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargeDetect", std::make_tuple("BattSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattReserveStatus", std::make_tuple("BattSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacity", std::make_tuple("BattSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattPower", std::make_tuple("BattSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDataSource", std::make_tuple("DCSrcSts1", "DevPri", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTemp", std::make_tuple("DCSrcSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemain", std::make_tuple("DCSrcSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemainInterp", std::make_tuple("DCSrcSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityRemain", std::make_tuple("DCSrcSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityPer", std::make_tuple("DCSrcSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDesiredChgState", std::make_tuple("DCSrcSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDischargerSwitch", std::make_tuple("DcSrcSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargerSwitch", std::make_tuple("DcSrcSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargeDetect", std::make_tuple("DcSrcSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankReserveStatus", std::make_tuple("DcSrcSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacity", std::make_tuple("DcSrcSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankPower", std::make_tuple("DcSrcSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CanAddr", std::make_tuple("PmPpnReadRsp", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnReadRsp", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnReadRsp", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnReadRsp", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnReadRsp", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("PmPpnReadRsp", "SwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ProdId", std::make_tuple("PmPpnReadRsp", "ProdId", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RatedCapacity", std::make_tuple("PmPpnReadRsp", "RatedCapacity", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInSeries", std::make_tuple("PmPpnReadRsp", "CellsInSeries", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInParallel", std::make_tuple("PmPpnReadRsp", "CellsInParallel", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BmsSerialNum", std::make_tuple("PmPpnReadRsp", "BmsSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcSerialNum", std::make_tuple("PmPpnReadRsp", "BpcSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcHwVer", std::make_tuple("PmPpnReadRsp", "BpcHwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnReadRsp", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnReadRsp", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0310_12_01 Command Map
ParamCmdMap x0884_0310_12_01_CMD_MAP = {
    {"CanAddr", std::make_tuple("PmPpnWriteCmd", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnWriteCmd", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnWriteCmd", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnWriteCmd", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnWriteCmd", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnWriteCmd", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnWriteCmd", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0310_12_01 Fault Lookup
Fault x0884_0310_12_01_FAULT_LOOKUP = {
};

// x0884_0310_12_01 Warning Lookup
Warning x0884_0310_12_01_WARNING_LOOKUP = {
};

// x0884_0310_12_01 Model Map
Model x0884_0310_12_01_MODEL_MAP = std::make_tuple(
    "bms",
    x0884_0310_12_01_PARAM_MAP,
    x0884_0310_12_01_CMD_MAP,
    x0884_0310_12_01_FAULT_LOOKUP,
    x0884_0310_12_01_WARNING_LOOKUP
);

// x0884_0410_12_01 Parameter Map
ParamCmdMap x0884_0410_12_01_PARAM_MAP = {
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("BattSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("BattSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("BattSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattStateOfCharge", std::make_tuple("BattSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemain", std::make_tuple("BattSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemainInterp", std::make_tuple("BattSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityRemain", std::make_tuple("BattSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityPer", std::make_tuple("BattSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredChgState", std::make_tuple("BattSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltLimitSts", std::make_tuple("BattSts6", "HiVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltDisconSts", std::make_tuple("BattSts6", "HiVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltLimitSts", std::make_tuple("BattSts6", "LowVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltDisconSts", std::make_tuple("BattSts6", "LowVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocLimitSts", std::make_tuple("BattSts6", "LowSocLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocDisconSts", std::make_tuple("BattSts6", "LowSocDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempLimitSts", std::make_tuple("BattSts6", "LowDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempDisconSts", std::make_tuple("BattSts6", "LowDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempLimitSts", std::make_tuple("BattSts6", "HiDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempDisconSts", std::make_tuple("BattSts6", "HiDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcLimitSts", std::make_tuple("BattSts6", "HiAmpDcSrcLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcDisconSts", std::make_tuple("BattSts6", "HiAmpDcSrcDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DischargerSwitch", std::make_tuple("BattSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("BattSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargeDetect", std::make_tuple("BattSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattReserveStatus", std::make_tuple("BattSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacity", std::make_tuple("BattSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattPower", std::make_tuple("BattSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDataSource", std::make_tuple("DCSrcSts1", "DevPri", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTemp", std::make_tuple("DCSrcSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemain", std::make_tuple("DCSrcSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemainInterp", std::make_tuple("DCSrcSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityRemain", std::make_tuple("DCSrcSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityPer", std::make_tuple("DCSrcSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDesiredChgState", std::make_tuple("DCSrcSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDischargerSwitch", std::make_tuple("DcSrcSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargerSwitch", std::make_tuple("DcSrcSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargeDetect", std::make_tuple("DcSrcSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankReserveStatus", std::make_tuple("DcSrcSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacity", std::make_tuple("DcSrcSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankPower", std::make_tuple("DcSrcSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CanAddr", std::make_tuple("PmPpnReadRsp", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnReadRsp", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnReadRsp", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnReadRsp", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnReadRsp", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("PmPpnReadRsp", "SwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ProdId", std::make_tuple("PmPpnReadRsp", "ProdId", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RatedCapacity", std::make_tuple("PmPpnReadRsp", "RatedCapacity", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInSeries", std::make_tuple("PmPpnReadRsp", "CellsInSeries", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInParallel", std::make_tuple("PmPpnReadRsp", "CellsInParallel", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BmsSerialNum", std::make_tuple("PmPpnReadRsp", "BmsSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcSerialNum", std::make_tuple("PmPpnReadRsp", "BpcSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcHwVer", std::make_tuple("PmPpnReadRsp", "BpcHwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnReadRsp", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnReadRsp", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0410_12_01 Command Map
ParamCmdMap x0884_0410_12_01_CMD_MAP = {
    {"CanAddr", std::make_tuple("PmPpnWriteCmd", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnWriteCmd", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnWriteCmd", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnWriteCmd", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnWriteCmd", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnWriteCmd", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnWriteCmd", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0410_12_01 Fault Lookup
Fault x0884_0410_12_01_FAULT_LOOKUP = {
};

// x0884_0410_12_01 Warning Lookup
Warning x0884_0410_12_01_WARNING_LOOKUP = {
};

// x0884_0410_12_01 Model Map
Model x0884_0410_12_01_MODEL_MAP = std::make_tuple(
    "bms",
    x0884_0410_12_01_PARAM_MAP,
    x0884_0410_12_01_CMD_MAP,
    x0884_0410_12_01_FAULT_LOOKUP,
    x0884_0410_12_01_WARNING_LOOKUP
);

// x0884_0205_24 Parameter Map
ParamCmdMap x0884_0205_24_PARAM_MAP = {
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("BattSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("BattSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("BattSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattStateOfCharge", std::make_tuple("BattSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemain", std::make_tuple("BattSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemainInterp", std::make_tuple("BattSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityRemain", std::make_tuple("BattSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityPer", std::make_tuple("BattSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredChgState", std::make_tuple("BattSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltLimitSts", std::make_tuple("BattSts6", "HiVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltDisconSts", std::make_tuple("BattSts6", "HiVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltLimitSts", std::make_tuple("BattSts6", "LowVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltDisconSts", std::make_tuple("BattSts6", "LowVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocLimitSts", std::make_tuple("BattSts6", "LowSocLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocDisconSts", std::make_tuple("BattSts6", "LowSocDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempLimitSts", std::make_tuple("BattSts6", "LowDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempDisconSts", std::make_tuple("BattSts6", "LowDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempLimitSts", std::make_tuple("BattSts6", "HiDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempDisconSts", std::make_tuple("BattSts6", "HiDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcLimitSts", std::make_tuple("BattSts6", "HiAmpDcSrcLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcDisconSts", std::make_tuple("BattSts6", "HiAmpDcSrcDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DischargerSwitch", std::make_tuple("BattSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("BattSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargeDetect", std::make_tuple("BattSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattReserveStatus", std::make_tuple("BattSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacity", std::make_tuple("BattSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattPower", std::make_tuple("BattSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDataSource", std::make_tuple("DCSrcSts1", "DevPri", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTemp", std::make_tuple("DCSrcSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemain", std::make_tuple("DCSrcSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemainInterp", std::make_tuple("DCSrcSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityRemain", std::make_tuple("DCSrcSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityPer", std::make_tuple("DCSrcSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDesiredChgState", std::make_tuple("DCSrcSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDischargerSwitch", std::make_tuple("DcSrcSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargerSwitch", std::make_tuple("DcSrcSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargeDetect", std::make_tuple("DcSrcSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankReserveStatus", std::make_tuple("DcSrcSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacity", std::make_tuple("DcSrcSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankPower", std::make_tuple("DcSrcSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CanAddr", std::make_tuple("PmPpnReadRsp", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnReadRsp", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnReadRsp", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnReadRsp", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnReadRsp", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("PmPpnReadRsp", "SwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ProdId", std::make_tuple("PmPpnReadRsp", "ProdId", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RatedCapacity", std::make_tuple("PmPpnReadRsp", "RatedCapacity", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInSeries", std::make_tuple("PmPpnReadRsp", "CellsInSeries", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInParallel", std::make_tuple("PmPpnReadRsp", "CellsInParallel", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BmsSerialNum", std::make_tuple("PmPpnReadRsp", "BmsSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcSerialNum", std::make_tuple("PmPpnReadRsp", "BpcSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcHwVer", std::make_tuple("PmPpnReadRsp", "BpcHwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnReadRsp", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnReadRsp", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0205_24 Command Map
ParamCmdMap x0884_0205_24_CMD_MAP = {
    {"CanAddr", std::make_tuple("PmPpnWriteCmd", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnWriteCmd", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnWriteCmd", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnWriteCmd", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnWriteCmd", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnWriteCmd", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnWriteCmd", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0205_24 Fault Lookup
Fault x0884_0205_24_FAULT_LOOKUP = {
};

// x0884_0205_24 Warning Lookup
Warning x0884_0205_24_WARNING_LOOKUP = {
};

// x0884_0205_24 Model Map
Model x0884_0205_24_MODEL_MAP = std::make_tuple(
    "bms",
    x0884_0205_24_PARAM_MAP,
    x0884_0205_24_CMD_MAP,
    x0884_0205_24_FAULT_LOOKUP,
    x0884_0205_24_WARNING_LOOKUP
);

// x0884_0100_51 Parameter Map
ParamCmdMap x0884_0100_51_PARAM_MAP = {
    {"Manufacturer", std::make_tuple("ProdIdent", "Make", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"Model", std::make_tuple("ProdIdent", "Model", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SerialNumber", std::make_tuple("ProdIdent", "Serial", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("BattSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("BattSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("BattSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattStateOfCharge", std::make_tuple("BattSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemain", std::make_tuple("BattSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTimeRemainInterp", std::make_tuple("BattSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityRemain", std::make_tuple("BattSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacityPer", std::make_tuple("BattSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DesiredChgState", std::make_tuple("BattSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltLimitSts", std::make_tuple("BattSts6", "HiVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiVoltDisconSts", std::make_tuple("BattSts6", "HiVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltLimitSts", std::make_tuple("BattSts6", "LowVoltLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltDisconSts", std::make_tuple("BattSts6", "LowVoltDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocLimitSts", std::make_tuple("BattSts6", "LowSocLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowSocDisconSts", std::make_tuple("BattSts6", "LowSocDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempLimitSts", std::make_tuple("BattSts6", "LowDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowDcSrcTempDisconSts", std::make_tuple("BattSts6", "LowDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempLimitSts", std::make_tuple("BattSts6", "HiDcSrcTempLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiDcSrcTempDisconSts", std::make_tuple("BattSts6", "HiDcSrcTempDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcLimitSts", std::make_tuple("BattSts6", "HiAmpDcSrcLimitSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"HiAmpDcSrcDisconSts", std::make_tuple("BattSts6", "HiAmpDcSrcDisconSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DischargerSwitch", std::make_tuple("BattSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerSwitch", std::make_tuple("BattSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargeDetect", std::make_tuple("BattSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattReserveStatus", std::make_tuple("BattSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCapacity", std::make_tuple("BattSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattPower", std::make_tuple("BattSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDataSource", std::make_tuple("DCSrcSts1", "DevPri", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankVolts", std::make_tuple("DCSrcSts1", "DcV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCurrent", std::make_tuple("DCSrcSts1", "DcI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTemp", std::make_tuple("DCSrcSts2", "SrcTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemain", std::make_tuple("DCSrcSts2", "TimeRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankTimeRemainInterp", std::make_tuple("DCSrcSts2", "TimeRemainInterp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityRemain", std::make_tuple("DCSrcSts3", "CapRemain", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacityPer", std::make_tuple("DCSrcSts3", "RelCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDesiredChgState", std::make_tuple("DCSrcSts4", "DesChgState", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankDischargerSwitch", std::make_tuple("DcSrcSts11", "DischgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargerSwitch", std::make_tuple("DcSrcSts11", "ChgOnOffSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankChargeDetect", std::make_tuple("DcSrcSts11", "ChgDetect", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankReserveStatus", std::make_tuple("DcSrcSts11", "ReservSts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankCapacity", std::make_tuple("DcSrcSts11", "NomFullCap", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankPower", std::make_tuple("DcSrcSts11", "DcPwr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CanAddr", std::make_tuple("PmPpnReadRsp", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnReadRsp", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnReadRsp", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnReadRsp", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnReadRsp", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"SwVersion", std::make_tuple("PmPpnReadRsp", "SwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ProdId", std::make_tuple("PmPpnReadRsp", "ProdId", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RatedCapacity", std::make_tuple("PmPpnReadRsp", "RatedCapacity", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInSeries", std::make_tuple("PmPpnReadRsp", "CellsInSeries", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CellsInParallel", std::make_tuple("PmPpnReadRsp", "CellsInParallel", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BmsSerialNum", std::make_tuple("PmPpnReadRsp", "BmsSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcSerialNum", std::make_tuple("PmPpnReadRsp", "BpcSerialNum", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BpcHwVer", std::make_tuple("PmPpnReadRsp", "BpcHwVer", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnReadRsp", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnReadRsp", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0100_51 Command Map
ParamCmdMap x0884_0100_51_CMD_MAP = {
    {"CanAddr", std::make_tuple("PmPpnWriteCmd", "CanAddr", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattInst", std::make_tuple("PmPpnWriteCmd", "BattInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"NumPacks", std::make_tuple("PmPpnWriteCmd", "NumPacks", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BankInst", std::make_tuple("PmPpnWriteCmd", "BankInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ReserveLimit", std::make_tuple("PmPpnWriteCmd", "ReserveLimit", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BlueToothCfg", std::make_tuple("PmPpnWriteCmd", "BlueToothCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"WiFiCfg", std::make_tuple("PmPpnWriteCmd", "WiFiCfg", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// x0884_0100_51 Fault Lookup
Fault x0884_0100_51_FAULT_LOOKUP = {
};

// x0884_0100_51 Warning Lookup
Warning x0884_0100_51_WARNING_LOOKUP = {
};

// x0884_0100_51 Model Map
Model x0884_0100_51_MODEL_MAP = std::make_tuple(
    "bms",
    x0884_0100_51_PARAM_MAP,
    x0884_0100_51_CMD_MAP,
    x0884_0100_51_FAULT_LOOKUP,
    x0884_0100_51_WARNING_LOOKUP
);

// xMPPT_RVC_30 Parameter Map
ParamCmdMap xMPPT_RVC_30_PARAM_MAP = {
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DeviceNumber", std::make_tuple("InstSts", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SysDateTimeSts", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("SccSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "fnSccSts2ChgOpState")},
    {"BattStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("SccBattSts", "BattTemp", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("DcSrcInst", "1")}, "")},
    {"BattVolts", std::make_tuple("SccBattSts", "BattVolts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("DcSrcInst", "1")}, "")},
    {"BattCurrent", std::make_tuple("SccBattSts", "BattCurrent", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("DcSrcInst", "1")}, "")},
    {"Batt2Current", std::make_tuple("SccBattSts", "BattCurrent", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("DcSrcInst", "2")}, "")},
    {"Batt2StateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("Inst", "2")}, "")},
    {"Batt2Volts", std::make_tuple("SccBattSts", "BattVolts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("DcSrcInst", "2")}, "")},
    {"BattCurrentRating", std::make_tuple("SccSts2", "RatedBattI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattOverVoltsDisconnect", std::make_tuple("SccCfgSts3", "BattOvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsDisconnectThresh", std::make_tuple("SccCfgSts3", "BattUvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsWarningThresh", std::make_tuple("SccCfgSts3", "BattUvWarnThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts2", std::make_tuple("SccBattSts", "BattVolts", std::vector<std::tuple<std::string, std::string>>{std::make_tuple("DcSrcInst", "2")}, "")},
    {"BattVoltsRating", std::make_tuple("SccSts2", "RatedBattV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("SccCfgSts", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("SccCfgSts", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2BatteryType")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("SccCfgSts2", "ChgRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("SccCfgSts4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("SccSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2ChargerEnable")},
    {"CustomBulkVoltage", std::make_tuple("SccCfgSts2", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("SccEqlzCfgSts", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("SccCfgSts2", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ClearStats", std::make_tuple("", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"EqualizeDuration", std::make_tuple("SccEqlzCfgSts", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"GenEnergyLife", std::make_tuple("SccSts5", "CumPwrGen", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltageReconnectThresh", std::make_tuple("SccCfgSts4", "BattUvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OverVoltageReconnectThresh", std::make_tuple("SccCfgSts4", "BattOvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayCurrent", std::make_tuple("SccArraySts", "ArrayI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayCurrentRating", std::make_tuple("SccSts3", "RatedPvI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayPower", std::make_tuple("SccArraySts", "", std::vector<std::tuple<std::string, std::string>>{}, "fnPvArrayPower")},
    {"PvArrayVolts", std::make_tuple("SccArraySts", "ArrayV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayVoltsRating", std::make_tuple("SccSts3", "RatedPvV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UnitTemp", std::make_tuple("SccSts6", "IntTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xMPPT_RVC_30 Command Map
ParamCmdMap xMPPT_RVC_30_CMD_MAP = {
    {"DeviceNumber", std::make_tuple("InstAssign", "BaseInst", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"DateTime", std::make_tuple("SetSysDateTime", "None", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"RestoreFactoryDefaults", std::make_tuple("GenRst", "RstDflt", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattOverVoltsDisconnect", std::make_tuple("SccCfgCmd3", "BattOvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsDisconnectThresh", std::make_tuple("SccCfgCmd3", "BattUvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsWarningThresh", std::make_tuple("SccCfgCmd3", "BattUvWarnThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("SccCfgCmd", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("SccCfgCmd", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "fnBatteryType2Cmd")},
    {"ChargerBatteryRechargeVoltage", std::make_tuple("SccCfgCmd2", "ChgRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("SccCfgCmd4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("SccCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChargerEnable2Cmd")},
    {"CustomBulkVoltage", std::make_tuple("SccCfgCmd2", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomEqualizationVoltage", std::make_tuple("SccEqlzCfgCmd", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("SccCfgCmd2", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ClearStats", std::make_tuple("SccCmd", "ClrHist", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"EqualizeDuration", std::make_tuple("SccEqlzCfgCmd", "EqlzTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltageReconnectThresh", std::make_tuple("SccCfgCmd4", "BattUvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OverVoltageReconnectThresh", std::make_tuple("SccCfgCmd4", "BattOvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xMPPT_RVC_30 Fault Lookup
Fault xMPPT_RVC_30_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 5, 2, 131136, "Disequilibrium in three circuits"),
    std::make_tuple(0, 0, 5, 3, 139264, "Charging mosfet short circuit"),
    std::make_tuple(0, 0, 5, 4, 133120, "Anti-reverse mosfet short circuit"),
    std::make_tuple(0, 0, 5, 5, 135168, "Charging or anti-reverse mosfet is open circuit"),
    std::make_tuple(1, -1, 4, 2, 65540, "Battery fault"),
    std::make_tuple(2, -1, 3, 3, 131104, "PV is short circuit"),
    std::make_tuple(2, -1, 3, 16, 132096, "Input is over current"),
};

// xMPPT_RVC_30 Warning Lookup
Warning xMPPT_RVC_30_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 19, 98304, "Wrong identification for rated voltage"),
    std::make_tuple(0, 0, 6, 0, 2, "Power device over temperature"),
    std::make_tuple(1, -1, 0, 16, 65537, "Battery over voltage"),
    std::make_tuple(1, -1, 0, 18, 65538, "Battery under voltage"),
    std::make_tuple(1, -1, 2, 16, 65552, "Over temp warning"),
    std::make_tuple(1, -1, 2, 18, 65568, "Low temp warning"),
    std::make_tuple(1, -1, 3, 1, 65539, "Battery over discharge"),
    std::make_tuple(1, -1, 4, 5, 65792, "Battery inner resistance abnormal"),
    std::make_tuple(2, -1, 0, 0, 1, "Over temperature inside the device"),
    std::make_tuple(2, -1, 2, 1, 147456, "No input power"),
    std::make_tuple(2, -1, 2, 2, 180224, "Input voltage error"),
    std::make_tuple(2, -1, 2, 16, 163840, "High input voltage"),
};

// xMPPT_RVC_30 Model Map
Model xMPPT_RVC_30_MODEL_MAP = std::make_tuple(
    "scc",
    xMPPT_RVC_30_PARAM_MAP,
    xMPPT_RVC_30_CMD_MAP,
    xMPPT_RVC_30_FAULT_LOOKUP,
    xMPPT_RVC_30_WARNING_LOOKUP
);

// xMC4860N15 Parameter Map
ParamCmdMap xMC4860N15_PARAM_MAP = {
    {"Alerts", std::make_tuple("DiagMsg1", "", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChgOpState", std::make_tuple("SccSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "fnSccSts2ChgOpState")},
    {"BattStateOfCharge", std::make_tuple("DCSrcSts2", "Soc", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTemp", std::make_tuple("SccBattSts", "BattTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVolts", std::make_tuple("SccBattSts", "BattVolts", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrent", std::make_tuple("SccBattSts", "BattCurrent", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattCurrentRating", std::make_tuple("SccSts2", "RatedBattI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattOverVoltsDisconnect", std::make_tuple("SccCfgSts3", "BattOvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsDisconnectThresh", std::make_tuple("SccCfgSts3", "BattUvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsWarningThresh", std::make_tuple("SccCfgSts3", "BattUvWarnThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattVoltsRating", std::make_tuple("SccSts2", "RatedBattV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("SccCfgSts", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("SccCfgSts", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2BatteryType")},
    {"ChargerMaxChargeCurrent", std::make_tuple("SccCfgSts", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerBatteryRebulkVoltage", std::make_tuple("SccCfgSts2", "ChgRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("SccCfgSts4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("SccSts", "OpState", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2ChargerEnable")},
    {"CustomBulkVoltage", std::make_tuple("SccCfgSts2", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTempConstScc", std::make_tuple("SccCfgSts4", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "fnSts2TempComp")},
    {"CustomEqualizationVoltage", std::make_tuple("SccEqlzCfgSts", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("SccCfgSts2", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltageReconnectThresh", std::make_tuple("SccCfgSts4", "BattUvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OverVoltageReconnectThresh", std::make_tuple("SccCfgSts4", "BattOvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayCurrent", std::make_tuple("SccArraySts", "ArrayI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayCurrentRating", std::make_tuple("SccSts3", "RatedPvI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayPower", std::make_tuple("SccArraySts", "", std::vector<std::tuple<std::string, std::string>>{}, "fnPvArrayPower")},
    {"PvArrayVolts", std::make_tuple("SccArraySts", "ArrayV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"PvArrayVoltsRating", std::make_tuple("SccSts3", "RatedPvV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"UnitTemp", std::make_tuple("SccSts6", "IntTemp", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xMC4860N15 Command Map
ParamCmdMap xMC4860N15_CMD_MAP = {
    {"BattOverVoltsDisconnect", std::make_tuple("SccCfgCmd3", "BattOvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsDisconnectThresh", std::make_tuple("SccCfgCmd3", "BattUvSdThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattUnderVoltsWarningThresh", std::make_tuple("SccCfgCmd3", "BattUvWarnThresh", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryCapacity", std::make_tuple("SccCfgCmd", "BattBankSz", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BatteryType", std::make_tuple("SccCfgCmd", "BattType", std::vector<std::tuple<std::string, std::string>>{}, "fnBatteryType2Cmd")},
    {"ChargerMaxChargeCurrent", std::make_tuple("SccCfgCmd", "MaxChgI", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerBatteryRebulkVoltage", std::make_tuple("SccCfgCmd2", "ChgRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerAbsorptionTime", std::make_tuple("SccCfgCmd4", "AbsorpTime", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"ChargerEnable", std::make_tuple("SccCmd", "Sts", std::vector<std::tuple<std::string, std::string>>{}, "fnChargerEnable2Cmd")},
    {"CustomBulkVoltage", std::make_tuple("SccCfgCmd2", "BulkV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"BattTempConstScc", std::make_tuple("SccCfgCmd4", "TempCompConst", std::vector<std::tuple<std::string, std::string>>{}, "fnTempComp2Cmd")},
    {"CustomEqualizationVoltage", std::make_tuple("SccEqlzCfgCmd", "EqlzV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"CustomFloatVoltage", std::make_tuple("SccCfgCmd2", "FloatV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"LowVoltageReconnectThresh", std::make_tuple("SccCfgCmd4", "BattUvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
    {"OverVoltageReconnectThresh", std::make_tuple("SccCfgCmd4", "BattOvRetV", std::vector<std::tuple<std::string, std::string>>{}, "")},
};

// xMC4860N15 Fault Lookup
Fault xMC4860N15_FAULT_LOOKUP = {
    std::make_tuple(0, 0, 5, 2, 131136, "Disequilibrium in three circuits"),
    std::make_tuple(0, 0, 5, 3, 139264, "Charging mosfet short circuit"),
    std::make_tuple(0, 0, 5, 4, 133120, "Anti-reverse mosfet short circuit"),
    std::make_tuple(0, 0, 5, 5, 135168, "Charging or anti-reverse mosfet is open circuit"),
    std::make_tuple(1, -1, 4, 2, 65540, "Battery fault"),
    std::make_tuple(2, -1, 3, 3, 131104, "PV is short circuit"),
    std::make_tuple(2, -1, 3, 16, 132096, "Input is over current"),
};

// xMC4860N15 Warning Lookup
Warning xMC4860N15_WARNING_LOOKUP = {
    std::make_tuple(0, 0, 3, 19, 98304, "Wrong identification for rated voltage"),
    std::make_tuple(0, 0, 6, 0, 2, "Power device over temperature"),
    std::make_tuple(1, -1, 0, 16, 65537, "Battery over voltage"),
    std::make_tuple(1, -1, 0, 18, 65538, "Battery under voltage"),
    std::make_tuple(1, -1, 2, 16, 65552, "Over temp warning"),
    std::make_tuple(1, -1, 2, 18, 65568, "Low temp warning"),
    std::make_tuple(1, -1, 3, 1, 65539, "Battery over discharge"),
    std::make_tuple(1, -1, 4, 5, 65792, "Battery inner resistance abnormal"),
    std::make_tuple(2, -1, 0, 0, 1, "Over temperature inside the device"),
    std::make_tuple(2, -1, 2, 1, 147456, "No input power"),
    std::make_tuple(2, -1, 2, 2, 180224, "Input voltage error"),
    std::make_tuple(2, -1, 2, 16, 163840, "High input voltage"),
};

// xMC4860N15 Model Map
Model xMC4860N15_MODEL_MAP = std::make_tuple(
    "scc",
    xMC4860N15_PARAM_MAP,
    xMC4860N15_CMD_MAP,
    xMC4860N15_FAULT_LOOKUP,
    xMC4860N15_WARNING_LOOKUP
);

Model_Map MODEL_MAP = {
{ "FEX_RVC_4048_120_60", xFEX_RVC_4048_120_60_MODEL_MAP },
{ "FX-8182010", xFX_8182010_MODEL_MAP },
{ "FX-8183011", xFX_8183011_MODEL_MAP },
{ "FX-8171050", xFX_8171050_MODEL_MAP },
{ "FX-8172080", xFX_8172080_MODEL_MAP },
{ "FX-817208012", xFX_817208012_MODEL_MAP },
{ "FSW_RVC_2012_120_60", xFSW_RVC_2012_120_60_MODEL_MAP },
{ "FSW_RVC_3012_120_60", xFSW_RVC_3012_120_60_MODEL_MAP },
{ "FSW_RVC_2024_120_60", xFSW_RVC_2024_120_60_MODEL_MAP },
{ "FSW_RVC_3024_120_60", xFSW_RVC_3024_120_60_MODEL_MAP },
{ "FX-8061212", xFX_8061212_MODEL_MAP },
{ "FX-8171000", xFX_8171000_MODEL_MAP },
{ "FX-8172000", xFX_8172000_MODEL_MAP },
{ "FX-8173000", xFX_8173000_MODEL_MAP },
{ "FX-817200021", xFX_817200021_MODEL_MAP },
{ "FX-817200012", xFX_817200012_MODEL_MAP },
{ "8", x8_MODEL_MAP },
{ "0884-0310-12", x0884_0310_12_MODEL_MAP },
{ "0884-0410-12", x0884_0410_12_MODEL_MAP },
{ "0884-0310-12-01", x0884_0310_12_01_MODEL_MAP },
{ "0884-0410-12-01", x0884_0410_12_01_MODEL_MAP },
{ "0884-0205-24", x0884_0205_24_MODEL_MAP },
{ "0884-0100-51", x0884_0100_51_MODEL_MAP },
{ "MPPT_RVC_30", xMPPT_RVC_30_MODEL_MAP },
{ "MC4860N15", xMC4860N15_MODEL_MAP },
};